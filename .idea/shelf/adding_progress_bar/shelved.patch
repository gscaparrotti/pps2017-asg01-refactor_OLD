Index: app/src/main/java/com/android/gscaparrotti/bendermobile/fragments/TableFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.android.gscaparrotti.bendermobile.fragments;\n\nimport android.app.Activity;\nimport android.app.Fragment;\nimport android.content.Context;\nimport android.graphics.Color;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ArrayAdapter;\nimport android.widget.Button;\nimport android.widget.CheckBox;\nimport android.widget.CompoundButton;\nimport android.widget.ListView;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.android.gscaparrotti.bendermobile.R;\nimport com.android.gscaparrotti.bendermobile.activities.MainActivity;\nimport com.android.gscaparrotti.bendermobile.network.ServerInteractor;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.Comparator;\nimport java.util.HashMap;\nimport java.util.LinkedList;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Timer;\nimport java.util.TimerTask;\n\nimport model.Dish;\nimport model.IDish;\nimport model.Order;\nimport model.OrderedDish;\nimport model.Pair;\n\npublic class TableFragment extends Fragment {\n\n    private static final String TABLE_NUMBER = \"TABLENMBR\";\n    private int tableNumber;\n    private List<Order> list = new LinkedList<>();\n    private DishAdapter adapter;\n    private Timer timer;\n\n    private OnTableFragmentInteractionListener mListener;\n\n    public TableFragment() {\n    }\n\n    public static TableFragment newInstance(int param1) {\n        TableFragment fragment = new TableFragment();\n        Bundle args = new Bundle();\n        args.putInt(TABLE_NUMBER, param1);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            tableNumber = getArguments().getInt(TABLE_NUMBER);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        View view = inflater.inflate(R.layout.fragment_table, container, false);\n        TextView text = (TextView) view.findViewById(R.id.tableTitle);\n        if (tableNumber > 0) {\n            text.setText(text.getText() + \" \" + Integer.toString(tableNumber));\n        } else if (tableNumber == 0) {\n            text.setText(getString(R.string.ViewAllPendingOrders));\n            Button add = (Button) view.findViewById(R.id.addToTable);\n            add.setEnabled(false);\n        }\n        ListView listView = (ListView) view.findViewById(R.id.dishesList);\n        adapter = new DishAdapter(getActivity(), list);\n        listView.setAdapter(adapter);\n        Button update = (Button) view.findViewById(R.id.updateButton);\n        update.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                updateAndStartTasks();\n            }\n        });\n        Button addDish = (Button) view.findViewById(R.id.addToTable);\n        addDish.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (mListener != null) {\n                    mListener.onAddDishEventFired(tableNumber);\n                }\n            }\n        });\n        CheckBox filter = (CheckBox) view.findViewById(R.id.filterCheckBox);\n        if (tableNumber == 0) {\n            filter.setVisibility(View.VISIBLE);\n        }\n        filter.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            @Override\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                if (TableFragment.this.isVisible() && list != null) {\n                    aggiorna(new ArrayList<>(list));\n                    if (!isChecked) {\n                        new ServerOrdersDownloader().execute(tableNumber);\n                    }\n                }\n            }\n        });\n        if (tableNumber == 0) {\n            addDish.setClickable(false);\n        }\n        return view;\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        Log.d(\"FRAGMENT ON RESUME\", \"FRAGMENT ON RESUME\");\n        updateAndStartTasks();\n    }\n\n    @Override\n    public void onAttach(Activity context) {\n        super.onAttach(context);\n        if (context instanceof OnTableFragmentInteractionListener) {\n            mListener = (OnTableFragmentInteractionListener) context;\n        } else {\n            throw new RuntimeException(context.toString()\n                    + \" must implement OnMainFragmentInteractionListener\");\n        }\n    }\n\n\n\n    public void aggiorna(final List<Order> newList) {\n        if (list != null) {\n            list.clear();\n            final CheckBox filter = (CheckBox) getView().findViewById(R.id.filterCheckBox);\n            if (filter.isChecked()) {\n                for (final Order o : newList) {\n                    if (o.getDish().getFilterValue() != 0) {\n                        list.add(o);\n                    }\n                }\n            } else {\n                list.addAll(newList);\n            }\n            if (tableNumber != 0) {\n                Collections.sort(list, new Comparator<Order>() {\n                    @Override\n                    public int compare(Order o1, Order o2) {\n                        return (o2.getAmounts().getX() - o2.getAmounts().getY()) - (o1.getAmounts().getX() - o1.getAmounts().getY());\n                    }\n                });\n            } else {\n                Collections.sort(list, new Comparator<Order>() {\n                    @Override\n                    public int compare(Order o1, Order o2) {\n                        if (o1.getDish() instanceof OrderedDish && o2.getDish() instanceof OrderedDish) {\n                            return (((OrderedDish) o1.getDish()).getTime().compareTo(((OrderedDish) o2.getDish()).getTime()));\n                        } else if (o1.getDish() instanceof OrderedDish && !(o2.getDish() instanceof OrderedDish)) {\n                            return -1;\n                        } else if (o2.getDish() instanceof OrderedDish && !(o1.getDish() instanceof OrderedDish)){\n                            return 1;\n                        } else {\n                            return 0;\n                        }\n                    }\n                });\n            }\n        }\n        if (adapter != null) {\n            adapter.notifyDataSetChanged();\n        }\n        double totalPrice = 0;\n        for (Order o : newList) {\n            totalPrice += o.getAmounts().getX() * o.getDish().getPrice();\n        }\n        if (getView() != null) {\n            TextView price = (TextView) getView().findViewById(R.id.totalPrice);\n            price.setText(getResources().getString(R.string.PrezzoTotale) + String.format(\"%.2f\", totalPrice) + getResources().getString(R.string.valute));\n        }\n    }\n\n    public void aggiornaNome (final String name) {\n        if (getView() != null) {\n            TextView nameView = (TextView) getView().findViewById(R.id.tableTitle);\n            String newName = name.length() > 0 ? (\" - \" + name) : \"\";\n            nameView.setText(getString(R.string.tableTitle) + \" \" + Integer.toString(tableNumber) + newName);\n        }\n    }\n\n    @Override\n    public void onDetach() {\n        super.onDetach();\n        mListener = null;\n    }\n\n    @Override\n    public void onStop() {\n        super.onStop();\n        super.onDestroyView();\n        Log.d(\"FRAGMENT STOP\", \"FRAGMENT STOP\");\n        stopTasks();\n    }\n\n    private synchronized void updateAndStartTasks() {\n        //if timer is running, then just update, otherwise create timer and start it\n        if (timer != null) {\n            new ServerOrdersDownloader().execute(tableNumber);\n        } else {\n            timer = new Timer();\n            timer.schedule(new TimerTask() {\n                @Override\n                public void run() {\n                        MainActivity.runOnUI(new Runnable() {\n                            @Override\n                            public void run() {\n                                new ServerOrdersDownloader().execute(tableNumber);\n                            }\n                        });\n                }\n            }, 0, 6000);\n        }\n    }\n\n    private synchronized void stopTasks() {\n        if (timer != null) {\n            timer.cancel();\n            timer.purge();\n        }\n        timer = null;\n    }\n\n    /**\n     * This interface must be implemented by activities that contain this\n     * fragment to allow an interaction in this fragment to be communicated\n     * to the activity and potentially other fragments contained in that\n     * activity.\n     * <p/>\n     * See the Android Training lesson <a href=\n     * \"http://developer.android.com/training/basics/fragments/communicating.html\"\n     * >Communicating with Other Fragments</a> for more information.\n     */\n    public interface OnTableFragmentInteractionListener {\n        void onAddDishEventFired(final int tableNumber);\n    }\n\n    private class DishAdapter extends ArrayAdapter<Order> {\n\n        private LayoutInflater inflater;\n\n        public DishAdapter(Context context, List<Order> persone) {\n            super(context, 0, persone);\n            inflater = LayoutInflater.from(context);\n        }\n\n        @Override\n        public View getView(int position, View convertView, ViewGroup parent) {\n            if (convertView == null) {\n                convertView = inflater.inflate(R.layout.item_dish, parent, false);\n            }\n            final Order order = getItem(position);\n            convertView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    final DishDetailFragment detail = DishDetailFragment.newInstance(order);\n                    detail.show(getFragmentManager(), \"Dialog\");\n                }\n            });\n            convertView.setLongClickable(true);\n            convertView.setOnLongClickListener(new View.OnLongClickListener() {\n                @Override\n                public boolean onLongClick(View v) {\n                    order.getAmounts().setY(order.getAmounts().getX());\n                    if (tableNumber == 0) {\n                        final IDish dish = new Dish(order.getDish().getName().substring(0, order.getDish().getName().lastIndexOf(\" - \")), order.getDish().getPrice(), 0);\n                        final Order newOrder = new Order(order.getTable(), dish, order.getAmounts());\n                        new ServerOrdersUploader().execute(newOrder);\n                    } else {\n                        new ServerOrdersUploader().execute(order);\n                    }\n                    return true;\n                }\n            });\n            convertView.findViewById(R.id.removeButton).setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    if (tableNumber == 0) {\n                        final IDish dish = new Dish(order.getDish().getName().substring(0, order.getDish().getName().lastIndexOf(\" - \")), order.getDish().getPrice(), 0);\n                        final Order newOrder = new Order(order.getTable(), dish, new Pair<>(-1, 1));\n                        new ServerOrdersUploader().execute(newOrder);\n                    } else {\n                        new ServerOrdersUploader().execute(new Order(order.getTable(), order.getDish(), new Pair<>(-1, 1)));\n                    }\n                }\n            });\n            ((TextView) convertView.findViewById(R.id.dish)).setText(order.getDish().getName());\n            ((TextView) convertView.findViewById(R.id.dishToServe))\n                    .setText(getResources().getString(R.string.StringOrdinati) + Integer.toString(order.getAmounts().getX()));\n            ((TextView) convertView.findViewById(R.id.dishServed))\n                    .setText(getResources().getString(R.string.StringDaServire) + Integer.toString(order.getAmounts().getX() - order.getAmounts().getY()));\n            if (!order.getAmounts().getX().equals(order.getAmounts().getY())) {\n                convertView.findViewById(R.id.itemTableLayout).setBackgroundColor(Color.parseColor(\"#80FF5050\"));\n            } else {\n                convertView.findViewById(R.id.itemTableLayout).setBackgroundColor(Color.parseColor(\"#8099FF66\"));\n            }\n            return convertView;\n        }\n    }\n\n    private class ServerOrdersUploader extends AsyncTask<Order, Void, Boolean> {\n\n        private String errorMessage;\n        private String ip;\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            if (isAdded()) {\n                ip = getActivity().getSharedPreferences(\"BenderIP\", 0).getString(\"BenderIP\", \"Absent\");\n            } else {\n                this.cancel(true);\n            }\n        }\n\n        @Override\n        protected Boolean doInBackground(Order... params) {\n            final ServerInteractor uploader = ServerInteractor.getInstance();\n            boolean result = false;\n            final Object resultFromServer = uploader.sendCommandAndGetResult(ip, 6789, params[0]);\n            if (resultFromServer instanceof Exception) {\n                final Exception e = (Exception) resultFromServer;\n                errorMessage = e.toString();\n            } else if (resultFromServer instanceof String) {\n                final String stringResult = (String) resultFromServer;\n                if (stringResult.equals(\"ORDER UPDATED CORRECTLY\")) {\n                    result = true;\n                } else {\n                    errorMessage = stringResult;\n                }\n            }\n            return result;\n        }\n\n        @Override\n        protected void onPostExecute(Boolean aBoolean) {\n            if (aBoolean) {\n                if (isVisible()) {\n                    Toast.makeText(MainActivity.toastContext, MainActivity.toastContext.getString(R.string.UpdateSuccess), Toast.LENGTH_SHORT).show();\n                }\n                new ServerOrdersDownloader().execute(tableNumber);\n            } else {\n                final List<Order> errors = new LinkedList<>();\n                errors.add(new Order(TableFragment.this.tableNumber, new Dish(errorMessage, 0, 1), new Pair<>(0, 1)));\n                try {\n                    if (isVisible()) {\n                        aggiorna(errors);\n                    }\n                } catch (Exception e) {\n                    if (!(e instanceof NullPointerException) && isAdded()) {\n                        Toast.makeText(MainActivity.toastContext, \"Chiamare Jack\", Toast.LENGTH_LONG).show();\n                    }\n                }\n            }\n        }\n    }\n\n    private class ServerOrdersDownloader extends AsyncTask<Integer, Void, Pair<List<Order>, String>> {\n\n        private String ip;\n\n        @Override\n        protected void onPreExecute() {\n            super.onPreExecute();\n            if (isAdded()) {\n                ip = getActivity().getSharedPreferences(\"BenderIP\", 0).getString(\"BenderIP\", \"Absent\");\n            } else {\n                this.cancel(true);\n            }\n        }\n\n        @Override\n        protected Pair<List<Order>, String> doInBackground(Integer... params) {\n            //qui effettuerò la chiamata al server\n            final List<Order> temp = new LinkedList<>();\n            Map<Integer, String> names = new HashMap<>();\n            String tableName = null;\n            final ServerInteractor dataDownloader = ServerInteractor.getInstance();\n            Object input = null;\n            if (tableNumber > 0) {\n                input = dataDownloader.sendCommandAndGetResult(ip, 6789, \"GET TABLE \" + params[0]);\n            } else if (tableNumber == 0) {\n                input = dataDownloader.sendCommandAndGetResult(ip, 6789, \"GET PENDING ORDERS\");\n            } else {\n                //noinspection ThrowableInstanceNeverThrown\n                input = new Exception(\"Invalid Table Number\");\n            }\n            final Object tableNameInput = dataDownloader.sendCommandAndGetResult(ip, 6789, \"GET NAMES\");\n            if (tableNameInput instanceof Map) {\n                //noinspection unchecked\n                names = (Map<Integer, String>) tableNameInput;\n            } else if (tableNameInput instanceof Exception) {\n                final Exception e = (Exception) tableNameInput;\n                Log.e(\"exception\", e.toString());\n                temp.add(new Order(TableFragment.this.tableNumber, new Dish(e.toString(), 0, 1), new Pair<>(0, 1)));\n                stopTasks();\n                return new Pair<>(temp, tableName);\n            }\n            if (input instanceof Exception) {\n                final Exception e = (Exception) input;\n                e.printStackTrace();\n                Log.e(\"exception\", e.toString());\n                temp.add(new Order(TableFragment.this.tableNumber, new Dish(e.toString(), 0, 1), new Pair<>(0, 1)));\n                stopTasks();\n                return new Pair<>(temp, tableName);\n            } else if (input instanceof Map) {\n                //noinspection unchecked\n                final Map<IDish, Pair<Integer, Integer>> datas = (Map<IDish, Pair<Integer, Integer>>) input;\n                for(final Map.Entry<IDish, Pair<Integer, Integer>> entry : datas.entrySet()) {\n                    temp.add(new Order(TableFragment.this.tableNumber, entry.getKey(), entry.getValue()));\n                }\n                tableName = names.get(TableFragment.this.tableNumber);\n            } else if (input instanceof List) {\n                //noinspection unchecked\n                final List<Order> datas = (List<Order>) input;\n                for (final Order o : datas) {\n                    final StringBuilder strbldr = new StringBuilder(o.getDish().getName());\n                    strbldr.append(\" - \").append(o.getTable());\n                    if (names.containsKey(o.getTable())) {\n                        strbldr.append(\" (\").append(names.get(o.getTable())).append(\")\");\n                    }\n                    if (o.getDish() instanceof OrderedDish) {\n                        final OrderedDish originalDish = (OrderedDish) o.getDish();\n                        final OrderedDish tempDish = new OrderedDish(strbldr.toString(), o.getDish().getPrice(), originalDish.getFilterValue(), originalDish);\n                        temp.add(new Order(o.getTable(), tempDish, o.getAmounts()));\n                    } else {\n                        temp.add(new Order(o.getTable(), new Dish(strbldr.toString(), o.getDish().getPrice(), o.getDish().getFilterValue()), o.getAmounts()));\n                    }\n                }\n            }\n            return new Pair<>(temp, tableName);\n        }\n\n        @Override\n        protected void onPostExecute(Pair<List<Order>, String> orders) {\n            super.onPostExecute(orders);\n            try {\n                if (isVisible()) {\n                    aggiorna(orders.getX());\n                    aggiornaNome(orders.getY() != null ? orders.getY() : \"\");\n                }\n            } catch (Exception e) {\n                if (!(e instanceof NullPointerException) && isAdded()) {\n                    Toast.makeText(MainActivity.toastContext, \"Chiamare Jack\", Toast.LENGTH_LONG).show();\n                }\n            }\n        }\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/android/gscaparrotti/bendermobile/fragments/TableFragment.java	(revision 947a50ca9c2af5a8133144d8774ef36121d0225c)
+++ app/src/main/java/com/android/gscaparrotti/bendermobile/fragments/TableFragment.java	(revision )
@@ -116,6 +116,7 @@
         if (tableNumber == 0) {
             addDish.setClickable(false);
         }
+        getActivity().findViewById(R.id.progressBar).setVisibility(View.INVISIBLE);
         return view;
     }
 
@@ -382,6 +383,7 @@
             super.onPreExecute();
             if (isAdded()) {
                 ip = getActivity().getSharedPreferences("BenderIP", 0).getString("BenderIP", "Absent");
+                getActivity().findViewById(R.id.progressBar).setVisibility(View.VISIBLE);
             } else {
                 this.cancel(true);
             }
@@ -456,6 +458,7 @@
                 if (isVisible()) {
                     aggiorna(orders.getX());
                     aggiornaNome(orders.getY() != null ? orders.getY() : "");
+                    getActivity().findViewById(R.id.progressBar).setVisibility(View.INVISIBLE);
                 }
             } catch (Exception e) {
                 if (!(e instanceof NullPointerException) && isAdded()) {
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:id=\"@+id/container\">\n\n    <android.widget.Toolbar\n        android:id=\"@+id/my_toolbar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"?attr/actionBarSize\"\n        android:background=\"?attr/colorPrimary\"\n        android:elevation=\"4dp\"\n        android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"\n        android:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\"/>\n\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision 947a50ca9c2af5a8133144d8774ef36121d0225c)
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -11,6 +11,14 @@
         android:background="?attr/colorPrimary"
         android:elevation="4dp"
         android:theme="@style/ThemeOverlay.AppCompat.ActionBar"
-        android:popupTheme="@style/ThemeOverlay.AppCompat.Light"/>
+        android:popupTheme="@style/ThemeOverlay.AppCompat.Light">
+
+        <ProgressBar
+            android:id="@+id/progressBar"
+            style="?android:attr/progressBarStyle"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:visibility="invisible" />
+    </android.widget.Toolbar>
 
 </RelativeLayout>
\ No newline at end of file
